# Docker compose file intended to be used in CI/CD pipelines
version: "3"

services:
  zaproxy:
    image: owasp/zap2docker-weekly
    command: sleep 3600
  postgres:
    image: postgres:11.6
    environment:
      - POSTGRES_USER=tdpuser
      - POSTGRES_PASSWORD=something_secure
      - POSTGRES_DB=tdrs_test
      - POSTGRES_PORT=5432
  web:
    restart: always
    environment:
      - DB_USER=tdpuser
      - DB_PASSWORD=something_secure
      - DB_NAME=tdrs_test
      - DB_PORT=5432
      - DB_HOST=postgres
      - DJANGO_SETTINGS_MODULE=tdpservice.settings.test
      - DJANGO_CONFIGURATION=Test
      # The following values get passed in to docker from Circle CI environment variables
      - ACR_VALUES=${ACR_VALUES}
      - BASE_URL=${BASE_URL}
      - CLIENT_ID=${CLIENT_ID}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - FRONTEND_BASE_URL=${FRONTEND_BASE_URL}
      - JWT_KEY=${JWT_KEY}
      - JWT_CERT_TEST=${JWT_CERT_TEST}
      - MOCK_TOKEN=${MOCK_TOKEN}
      - OIDC_OP_AUTHORIZATION_ENDPOINT=${OIDC_OP_AUTHORIZATION_ENDPOINT}
      - OIDC_OP_JWKS_ENDPOINT=${OIDC_OP_JWKS_ENDPOINT}
      - OIDC_OP_LOGOUT_ENDPOINT=${OIDC_OP_LOGOUT_ENDPOINT}
      - OIDC_OP_TOKEN_ENDPOINT=${OIDC_OP_TOKEN_ENDPOINT}
    volumes:
      - .:/tdpapp
    image: tdp
    build:
      context: .
      dockerfile: docker/Dockerfile.local
    command: >
      bash -c "python wait_for_postgres.py &&
               ./gunicorn_start.sh"
    ports:
      - "8080:8080"
    depends_on:
      - postgres
