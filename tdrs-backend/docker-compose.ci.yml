# Docker compose file intended to be used in CI/CD pipelines
version: "3"

services:
  postgres:
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
  web:
    environment:
      - DB_HOST=postgres
      - DJANGO_SETTINGS_MODULE=tdpservice.settings.test
      - DJANGO_CONFIGURATION=Test
      # The following values get passed in to docker from Circle CI environment variables
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
      - DB_PORT=${POSTGRES_PORT}
      - ACR_VALUES=${ACR_VALUES}
      - BASE_URL=${BASE_URL}
      - CLIENT_ASSERTION_TYPE=${CLIENT_ASSERTION_TYPE}
      - CLIENT_ID=${CLIENT_ID}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - FRONTEND_BASE_URL=${FRONTEND_BASE_URL}
      - JWT_KEY=${JWT_KEY}
      - JWT_CERT_TEST=${JWT_CERT_TEST}
      - MOCK_TOKEN=${MOCK_TOKEN}
      - OIDC_OP_AUTHORIZATION_ENDPOINT=${OIDC_OP_AUTHORIZATION_ENDPOINT}
      - OIDC_OP_ISSUER=${OIDC_OP_ISSUER}
      - OIDC_OP_JWKS_ENDPOINT=${OIDC_OP_JWKS_ENDPOINT}
      - OIDC_OP_LOGOUT_ENDPOINT=${OIDC_OP_LOGOUT_ENDPOINT}
      - OIDC_OP_TOKEN_ENDPOINT=${OIDC_OP_TOKEN_ENDPOINT}
